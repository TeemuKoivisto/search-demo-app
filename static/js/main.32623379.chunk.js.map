{"version":3,"sources":["stores/TopicStore.ts","api/topics.api.ts","stores/ToastStore.ts","stores/mobxConf.ts","theme/styled.ts","theme/GlobalStyle.ts","components/NavBar.tsx","hooks/useTimeout.ts","components/Toaster.tsx","components/WrappedRoute.tsx","elements/Input.tsx","hooks/useClickOutside.ts","components/SearchInput.tsx","components/TopicSearchInput.tsx","components/OldSearchInput.tsx","components/OldTopicSearchInput.tsx","pages/FrontPage.tsx","routes.tsx","index.tsx","stores/index.ts","theme/defaultTheme.ts"],"names":["TopicStore","observable","action","a","loading","Promise","resolve","topics","result","runInAction","console","log","ToastStore","idCounter","message","type","duration","newToast","id","this","toasts","push","filter","t","settings","enforceActions","styledComponents","styled","default","createGlobalStyle","css","keyframes","ThemeProvider","GlobalStyle","theme","font","text","nav","Link","NavLink","color","white","textDark","fontSize","medium","primary","div","useTimeout","callback","delay","useEffect","setTimeout","clearTimeout","Toast","props","className","toast","removeToast","useState","inProgress","setInProgress","ToastItem","ToastBody","SvgWrapper","size","getTypeIcon","SvgAction","onClick","Progress","Toaster","inject","observer","toastStore","ToastsList","map","key","getTypeColor","blue","orange","red","green","span","button","ul","li","WrappedRoute","component","rest","render","Component","MainWrapper","MainContainer","main","InputEl","forwardRef","ref","handleChange","event","disabled","onChange","target","value","icon","placeholder","required","autocomplete","onKeyPress","onFocus","onBlur","fullWidth","paddingLeft","hasError","Container","StyledTextarea","StyledInput","autoComplete","defaultProps","textarea","input","Input","useClickOutside","onClickOutside","isActive","isListening","setListening","handler","el","current","HTMLElement","contains","removeHandlers","document","removeEventListener","addEventListener","SearchInputEl","memo","dataAttrBase","searchItems","selected","rounded","searchIcon","resultIsLink","renderSearchResult","shownSearchResults","onSubmit","onSearch","searchResults","setSearchResults","shownResults","setShownResults","hasMoreResults","setHasMoreResults","useRef","resultsVisible","setResultsVisible","hideResults","debouncedSearch","debounce","handleSearch","newVal","length","time","newResults","timeEnd","SearchWrapper","SearchButton","data-gtm-label","IconWrapper","SearchIcon","ResultsList","visible","slice","r","i","ResultItem","item","handleResultItemClick","newShownResults","ShowMore","grayLight","borderColor","grayLightest","textLight","FiSearch","SearchInput","findTopicsByBreadcrumb","crumb","sort","b","breadcrumb","sortSearchResultsByCrumb","reduce","acc","cur","crumb1","crumb2","fromStart","to","undefined","equal","isEqualBreadcrumb","TopicSearchInput","topicStore","setSearchItems","Fuse","threshold","keys","tokenize","maxPatternLength","fuse","setFuse","newItems","createSearchItemsList","topic_id","path","split","handleSearchItemClick","e","prevVal","crumbs","search","SearchResult","searchOptions","dataLength","next","hasMore","loader","height","endMessage","gray","OldSearchInput","FrontPage","stores","React","PureComponent","componentDidMount","getTopics","href","SearchForm","topic","setTopic","topicId","setTopicId","getTopicError","handleTopicChange","val","handleTopicSelect","preventDefault","OldTopicSearchInput","Routes","basename","process","exact","configure","constructor","bg","secondary","yellow","small","large","xlarge","largeIcon","transitions","bezier","getElementById"],"mappings":"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","file":"static/js/main.32623379.chunk.js","sourcesContent":["import { action, runInAction, observable } from 'mobx'\nimport * as topicApi from '../api/topics.api'\n\nimport { ITopic } from '../types/topic'\n\nexport class TopicStore {\n  @observable topics: ITopic[] = []\n  @observable loading = false\n\n  @action\n  getTopics = async () => {\n    this.loading = true\n    const result = await topicApi.getTopics() as ITopic[]\n    runInAction(() => {\n      console.log(result)\n      this.topics = result\n      this.loading = false\n    })\n  }\n}\n","// import { ITopic as ITopic } from '../types/user'\n\nimport topics from './topics.json'\n\n// import {\n//   authenticatedHeaders,\n//   get,\n// } from './methods'\n\nexport const getTopics = () =>\n  Promise.resolve(topics)\n","import { action, observable } from 'mobx'\n\nimport { IToast } from '../types/ui'\n\nexport class ToastStore {\n  @observable toasts: IToast[] = []\n  idCounter: number = 0\n\n  @action createToast = (message: string, type: string = 'success', duration: number = 5000) => {\n    const newToast = {\n      id: this.idCounter,\n      message,\n      type,\n      duration\n    }\n    this.idCounter += 1\n    this.toasts.push(newToast)\n  }\n \n  @action removeToast = (id: number) => {\n    this.toasts = this.toasts.filter(t => t.id !== id)\n  }\n}\n","import { configure } from 'mobx'\n\nconst settings = { enforceActions: 'observed' as 'observed' }\n\nexport const confMobx = () => configure(settings)\n","import * as styledComponents from 'styled-components'\n\nimport { ITheme } from '../types/theme'\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<ITheme>\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider }\nexport default styled\n","import { createGlobalStyle } from './styled'\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-family: 'Raleway',sans-serif;\n    font-size: 16px;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  h1,h2,h3,h4 {\n    font-family: ${({ theme }) => theme.font.text };\n  }\n  * {\n    box-sizing: border-box;\n    font-family: ${({ theme }) => theme.font.text };\n  }\n  ul, ol {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  html.scroll-lock {\n    overflow: hidden;\n  }\n`\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n// import { inject, observer } from 'mobx-react'\n// import { css } from 'styled-components'\nimport styled from '../theme/styled'\n\nimport { RouteComponentProps } from 'react-router'\n\ninterface IProps extends RouteComponentProps<{}> {\n  className?: string\n}\n\nexport const NavBar = ((props: IProps) => {\n  const { className } = props\n  return (\n    <NavContainer className={className}>\n      <MainLinks>\n        <Link to=\"/\">Front page</Link>\n        <Link to=\"/users\">Topics page</Link>\n      </MainLinks>\n    </NavContainer>\n  )\n})\n\nconst NavContainer = styled.nav`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 1rem;\n`\nconst Link = styled(NavLink)`\n  background-color: ${({ theme }) => theme.color.white };\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  box-sizing: border-box;\n  color: ${({ theme }) => theme.color.textDark };\n  cursor: pointer;\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  padding: 1rem;\n  text-decoration: none;\n  &:hover {\n    background-color: ${({ theme }) => theme.color.primary };\n    color: ${({ theme }) => theme.color.white };\n  }\n  transition: 0.2s all;\n`\nconst MainLinks = styled.div`\n  display: flex;\n  ${Link} {\n    margin-right: 1rem;\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n","import { useEffect } from 'react'\n\nfunction useTimeout(callback: () => void, delay: number) {\n  useEffect(() => {\n    if (delay !== null) {\n      let id = setTimeout(callback, delay)\n      return () => clearTimeout(id)\n    }\n    return () => undefined\n  }, [callback, delay])\n}\n\nexport default useTimeout\n","import React, { useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from '../theme/styled'\nimport { FiAlertCircle, FiAlertTriangle, FiCheckCircle, FiXOctagon, FiX } from 'react-icons/fi'\n\nimport useTimeout from '../hooks/useTimeout'\n\nimport { ToastStore } from '../stores/ToastStore'\nimport { ITheme } from '../types/theme'\nimport { IToast } from '../types/ui'\n\ninterface IToastProps {\n  className?: string\n  toast: IToast\n  removeToast: (id: number) => void\n}\nfunction Toast(props: IToastProps) {\n  const { className, toast, removeToast } = props\n  const [inProgress, setInProgress] = useState(false)\n  useTimeout(() => {\n    setInProgress(true)\n  }, 0)\n  useTimeout(() => {\n    removeToast(toast.id)\n  }, toast.duration)\n  return (\n    <ToastItem className={className} type={toast.type}>\n      <ToastBody type={toast.type}>\n        <SvgWrapper className=\"type-icon\">{ getTypeIcon(toast.type) }</SvgWrapper>\n        <p className=\"message\">{ toast.message }</p>\n        <SvgAction className=\"close-icon\"><FiX size={24} onClick={() => removeToast(toast.id)}/></SvgAction>\n      </ToastBody>\n      <Progress type={toast.type} duration={toast.duration} inProgress={inProgress}/>\n    </ToastItem>\n  )\n}\n\ninterface IProps {\n  className?: string\n  toastStore?: ToastStore\n}\nexport const Toaster = inject('toastStore')(observer(function Toaster(props: IProps) {\n  const { className, toastStore } = props\n  return (\n    <ToastsList className={className}>\n      { toastStore!.toasts.map(t =>\n      <Toast key={t.id} toast={t} removeToast={toastStore!.removeToast} />\n      )}\n    </ToastsList>\n  )\n}))\n\nfunction getTypeIcon(type: string, size: number = 24) {\n  switch(type) {\n    case 'info':\n      return <FiAlertCircle size={size} />\n    case 'warning':\n      return <FiAlertTriangle size={size} />\n    case 'error':\n      return <FiXOctagon size={size} />\n    case 'success':\n    default:\n      return <FiCheckCircle size={size} />\n  }\n}\n\nfunction getTypeColor(type: string, theme: ITheme) {\n  switch(type) {\n    case 'info':\n      return theme.color.blue\n    case 'warning':\n      return theme.color.orange\n    case 'error':\n      return theme.color.red\n    case 'success':\n    default:\n      return theme.color.green\n  }\n}\n\nconst SvgWrapper = styled.span`\n  display: flex;\n`\nconst SvgAction = styled.button`\n  background: transparent;\n  border: 0;\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  padding: 8px;\n  transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.08);\n  }\n`\nconst ToastsList = styled.ul`\n  align-items: center;\n  bottom: 50px;\n  display: flex;\n  flex-direction: column-reverse;\n  left: 0;\n  list-style: none;\n  padding: 10px;\n  position: fixed;\n  width: 100%;\n  z-index: 10;\n`\ntype ToastItemProps = { type: string }\nconst ToastItem = styled.li<ToastItemProps>`\n  display: flex;\n  background: #fff;\n  border: 1px solid ${({ type, theme }) => getTypeColor(type, theme)};\n  border-left: 4px solid ${({ type, theme }) => getTypeColor(type, theme)};\n  border-radius: 4px;\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.18);\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 10px;\n  min-width: 300px;\n  max-width: 600px;\n  padding: 5px 5px 0 0;\n  width: 100%;\n`\ntype ToastBodyProps = { type: string }\nconst ToastBody = styled.div<ToastBodyProps>`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  margin: 4px 0 4px 0;\n  .type-icon {\n    color: ${({ type, theme }) => getTypeColor(type, theme)};\n    margin: 0 15px 0 15px;\n  }\n  .message {\n    color: ${({ type, theme }) => getTypeColor(type, theme)};\n    font-size: ${({ theme }) => theme.fontSize.medium};\n    font-style: bold;\n    margin: 10px 0 10px 0;\n  }\n  .remove-icon {\n    color: ${({ theme }) => theme.color.textDark};\n    cursor: pointer;\n    margin-right: 3px;\n  }\n`\ntype ProgressProps = { type: string, inProgress: boolean, duration: number }\nconst Progress = styled.div<ProgressProps>`\n  background: ${({ type, theme }) => getTypeColor(type, theme)};\n  height: 4px;\n  width: ${({ inProgress }) => inProgress ? '0%' : '100%'};\n  transition: width ${({ duration }) => duration}ms linear 0ms;\n`\n","import * as React from 'react'\nimport { Route, RouteProps, RouteComponentProps } from 'react-router'\nimport styled from '../theme/styled'\n\nimport { NavBar } from './NavBar'\nimport { Toaster } from './Toaster'\n\ninterface IWrappedRoute extends RouteProps {\n  component: React.ComponentClass<any>\n}\n\nconst renderNoMainContainerWrapper = (Component: React.ComponentClass) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <NavBar {...props}/>\n    <Toaster />\n    <Component {...props}/>\n  </MainWrapper>\n\nconst renderWrapper = (Component: React.ComponentClass) => (props: RouteComponentProps<any>) =>\n  <MainWrapper>\n    <Toaster />\n    <MainContainer>\n      <Component {...props}/>\n    </MainContainer>\n  </MainWrapper>\n\nexport const NoMainContainerRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderNoMainContainerWrapper(component)}/>\n\nexport const WrappedRoute = ({ component, ...rest } : IWrappedRoute) =>\n  <Route {...rest} render={renderWrapper(component)}/>\n\nconst MainWrapper = styled.div`\n`\nconst MainContainer = styled.main`\n  margin: 40px auto 20px auto;\n  max-width: 680px;\n  @media only screen and (max-width: 720px) {\n    margin: 40px 20px 20px 20px;\n  }\n`\n","import React, { forwardRef } from 'react'\nimport styled from '../theme/styled'\n\ninterface IProps {\n  id?: string\n  className?: string\n  value?: string | number\n  type?: 'email' | 'password' | 'text' | 'number' | 'textarea'\n  autocomplete?: string\n  color?: string\n  icon?: React.ReactNode\n  hasError?: boolean\n  paddingLeft?: string\n  fullWidth?: boolean\n  disabled?: boolean\n  placeholder?: string\n  required?: boolean\n  onChange: (value: any) => void // Basically one of: string | number | file\n  onFocus?: () => void\n  onBlur?: () => void\n  onKeyPress?: (e: React.KeyboardEvent) => void\n}\n\nconst InputEl = forwardRef((props: IProps, ref: React.Ref<any>) => {\n  function handleChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n    !disabled && props.onChange!(event.target.value)\n  }\n  const {\n    className, id, value, type, icon, placeholder, disabled, required,\n    autocomplete,\n    onKeyPress, onFocus, onBlur, fullWidth, paddingLeft, hasError\n  } = props\n  return (\n    <Container className={className} fullWidth={fullWidth}>\n      { icon }\n      { type === 'textarea' ?\n        <StyledTextarea\n          id={id}\n          ref={ref}\n          value={value}\n          placeholder={placeholder}\n          disabled={disabled}\n          required={required}\n          hasError={hasError}\n          onChange={handleChange}\n          onKeyPress={onKeyPress}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        :\n      <StyledInput\n        id={id}\n        ref={ref}\n        value={value}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        required={required}\n        autoComplete={autocomplete}\n        paddingLeft={paddingLeft}\n        hasError={hasError}\n        onChange={handleChange}\n        onKeyPress={onKeyPress}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      />\n      }\n    </Container>\n  )\n})\n\nInputEl.defaultProps = {\n  required: false,\n  type: 'text',\n  disabled: false,\n}\n\ntype ContainerProps = { fullWidth?: boolean }\nconst Container = styled.div<ContainerProps>`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.color.textDark };\n  border-radius: 4px;\n  display: flex;\n  position: relative;\n  width: ${({ fullWidth }) => fullWidth ? '100%' : '180px' };\n  &:focus {\n    background-image: linear-gradient(to right, #cefff8, #729EE74D);\n    color: ${({ theme }) => theme.color.textDark };\n    outline: auto 5px;\n  }\n  & > svg {\n    left: 8px;\n    position: absolute;\n  }\n`\ninterface ITextareaProps { hasError?: boolean }\nconst StyledTextarea = styled.textarea<ITextareaProps>`\n  border: 0;\n  border-radius: 4px;\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  height: 100%;\n  min-height: 100px;\n  padding: 0.5rem;\n  width: 100%;\n`\nconst StyledInput = styled.input<IProps>`\n  background-color: ${({ theme }) => theme.color.white };\n  border: 0;\n  border-radius: 4px;\n  color: ${({ theme }) => theme.color.textDark };\n  font-size: ${({ theme }) => theme.fontSize.medium };\n  padding: 0.5rem 0.5rem;\n  padding-left: ${({ paddingLeft }) => paddingLeft || ''};\n  text-decoration: none;\n  transition: 0.1s all;\n  width: 100%;\n  &:focus {\n    background-image: linear-gradient(to right,#fcffff,#e6f8ff4d);\n    color: ${({ theme }) => theme.color.textDark };\n  }\n`\nexport const Input = styled(InputEl)``\n","import { RefObject, useEffect, useState } from 'react'\n\nconst useClickOutside = (\n    ref : RefObject<HTMLElement | null>,\n    onClickOutside: (event: MouseEvent | TouchEvent) => void,\n    isActive: boolean) => {\n  const [isListening, setListening] = useState(false)\n  const handler = (event: MouseEvent | TouchEvent) => {\n    const { current: el } = ref\n    if (el && event.target && event.target instanceof HTMLElement && !el.contains(event.target)) {\n      onClickOutside(event)\n    }\n  }\n  function addHandlers() {\n    document.addEventListener('mousedown', handler)\n    document.addEventListener('touchstart', handler)\n  }\n  function removeHandlers() {\n    document.removeEventListener('mousedown', handler)\n    document.removeEventListener('touchstart', handler)\n  }\n  useEffect(() => {\n    if (!isListening && isActive) {\n      addHandlers()\n      setListening(true)\n    } else if (isListening && !isActive) {\n      removeHandlers()\n      setListening(false)\n    }\n    return () => {\n      removeHandlers()\n    }\n  }, [ref, !onClickOutside, isActive])\n}\n\nexport default useClickOutside\n","import React, { memo, useRef, useState, ReactNode } from 'react'\nimport styled from 'styled-components'\n// import PropTypes from 'prop-types'\nimport { FiSearch } from 'react-icons/fi'\n// import InfiniteScroll from 'react-infinite-scroll-component'\nimport debounce from 'lodash/debounce'\n\nimport {Input} from '../elements/Input'\n\nimport useClickOutside from '../hooks/useClickOutside'\nimport { ITheme } from '../types/theme'\nimport { ISearchTopic } from '../types/topic'\n\ninterface IProps {\n  className?: string\n  id?: string\n  value: string\n  placeholder?: string\n  disabled?: boolean\n  required?: boolean\n  hasError?: boolean\n  color?: string\n  dataAttrBase?: string\n  searchItems: any[]\n  // searchOptions: any\n  selected?: boolean\n  rounded?: boolean\n  searchIcon?: ReactNode\n  resultIsLink?: boolean\n  renderSearchResult: (result: ISearchTopic) => ReactNode\n  shownSearchResults: number\n  onChange: (val: string) => void\n  onSubmit: (item: ISearchTopic) => string\n  onSearch: (val: string, oldVal: string) => ISearchTopic[]\n}\n\nconst SearchInputEl = memo((props: IProps) => {\n  const {\n    className, id, value, placeholder, disabled, required, hasError,\n    color, dataAttrBase, searchItems, selected, rounded, searchIcon,\n    resultIsLink, renderSearchResult, shownSearchResults, onChange, onSubmit, onSearch\n  } = props\n  const [searchResults, setSearchResults] = useState([] as ISearchTopic[])\n  const [shownResults, setShownResults] = useState(shownSearchResults)\n  const [hasMoreResults, setHasMoreResults] = useState(false)\n  const ref = useRef(null)\n  const [resultsVisible, setResultsVisible] = useState(false)\n  useClickOutside(ref, () => hideResults(), resultsVisible)\n  // https://fusejs.io/\n  // fuse.js is a fuzzy-search library which is helpful when user makes typos etc\n  const debouncedSearch = debounce(handleSearch, 250)\n\n  function hideResults() {\n    setResultsVisible(false)\n  }\n  function handleKeyPress(event: React.KeyboardEvent) {\n    if (event.key === 'Enter') {\n      onSubmit(searchResults[0])\n      hideResults()\n    }\n  }\n  function handleChange(newVal: string) {\n    onChange(newVal)\n    debouncedSearch(newVal)\n  }\n  function handleSearch(newVal: string) {\n    const deletedText = newVal.length < value.length\n    // Reset the shownResults amount to the default\n    // Dunno if this is the perfect flow but it seems all right\n    if (deletedText) {\n      setShownResults(shownSearchResults)\n    }\n    // If searchItems were provided and there exists results\n    if (searchItems && searchItems.length > 0) {\n      console.time('search')\n      const newResults = onSearch(newVal, value)\n      console.log(newResults)\n      console.timeEnd('search')\n      setSearchResults(newResults)\n      // If there is new results less than shownResults, show the \"Näytä lisää\" at the end of the list\n      if (shownResults < newResults.length) {\n        setHasMoreResults(true)\n      } else {\n        setHasMoreResults(false)\n      }\n    }\n  }\n  function handleShowMoreResults() {\n    const newShownResults = shownResults + searchResults.length\n    setShownResults(newShownResults)\n    setHasMoreResults(false)\n  }\n  function handleResultItemClick(item: ISearchTopic) {\n    // Prevents onClick from transitioning if result was link that was opened to eg new tab\n    if (!resultIsLink) {\n      const newVal = onSubmit(item)\n      hideResults()\n      handleSearch(newVal)\n    }\n  }\n  function handleSearchIconClick() {\n    onSubmit(searchResults[0])\n    hideResults()\n  }\n  console.log(resultsVisible)\n  return (\n    <div className={className} ref={ref}>\n      <SearchWrapper\n        color={color}\n        hasError={hasError}\n        rounded={rounded}\n      >\n        <StyledInput\n          id={id}\n          type=\"text\"\n          value={value}\n          placeholder={placeholder}\n          disabled={disabled}\n          required={required}\n          hasError={hasError}\n          fullWidth\n          autocomplete=\"off\"\n          color={color}\n          selected={selected}\n          rounded={rounded}\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          onFocus={() => setResultsVisible(true)}\n        />\n        { searchIcon && <SearchButton\n          color={color}\n          rounded={rounded}\n          data-gtm-label={dataAttrBase ? `btn-search-${dataAttrBase}` : null}\n          onClick={handleSearchIconClick}\n        >\n          <IconWrapper color={color}>\n            <SearchIcon size={18} />\n          </IconWrapper>\n        </SearchButton>\n        }\n      </SearchWrapper>\n      <ResultsList visible={resultsVisible}>\n        {/* <InfiniteScroll\n          className=\"infinite-scroll\"\n          dataLength={shownResults}\n          next={handleShowMoreResults}\n          hasMore={hasMoreResults}\n          loader={<h4>Lataa aiheita..</h4>}\n          height={300}\n          endMessage={ searchResults.length !== 0 &&\n            <ResultItem className=\"end-of-results\">\n            </ResultItem>}\n        > */}\n        { searchResults.slice(0, shownResults).map((r, i) =>\n        <ResultItem key={r.key} onClick={() => handleResultItemClick(r)}>\n          {renderSearchResult(r)}\n        </ResultItem>\n        )}\n        { hasMoreResults &&\n        <ResultItem onClick={handleShowMoreResults}>\n          <ShowMore>Näytä lisää</ShowMore>\n        </ResultItem>}\n        {/* </InfiniteScroll> */}\n      </ResultsList>\n    </div>\n  )\n})\n\nfunction borderColor(props: { color?: string, hasError?: boolean, theme: ITheme}) {\n  const { color, hasError, theme } = props\n  if (hasError) return theme.color.red\n  if (color === 'green') return theme.color.green\n  return theme.color.grayLight\n}\nconst SearchWrapper = styled.div<{ color?: string, rounded?: boolean, hasError?: boolean }>`\n  display: flex;\n  align-items: center;\n  background: ${({ color, theme }) => color === 'white' ? '#fff' : theme.color.green};\n  border: 1px solid ${(props) => borderColor(props)};\n  border-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  justify-content: space-between;\n  &:hover, &:active, &:focus {\n    border-color: #40a9ff;\n  }\n`\nconst StyledInput = styled(Input)<{ rounded?: boolean, selected?: boolean }>`\n  border: 0;\n  // Eliminate awkward empty space before the input text\n  margin-left: ${({ rounded }) => rounded && '11px'};\n  & > input {\n    border: 0;\n    outline: 0;\n    // Same empty space thing. Total 14px matches Input's left padding\n    padding-left: ${({ rounded }) => rounded && '3px'};\n    text-decoration: ${({ selected }) => selected && 'underline'};\n  }\n`\nconst SearchButton = styled.button<{ rounded?: boolean }>`\n  background: transparent;\n  border: none;\n  border-top-right-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  border-bottom-right-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  cursor: pointer;\n  padding: 7px 16px;\n  outline: none;\n  &:hover {\n    background-color: ${({ color, theme }) => color === 'white' ? theme.grayLightest : theme.color.green};\n    border-left: 1px solid ${({ theme }) => theme.color.grayLight};\n  }\n`\nconst IconWrapper = styled.div`\n  display: flex; // Center the search icon\n  height: 18px;\n  color: ${({ color, theme }) => color === 'white' ? theme.color.textLight : '#fff'};\n`\nconst SearchIcon = styled(FiSearch)`\n  vertical-align: middle;\n`\n// const SvgWrapper = styled.span`\n//   align-items: center;\n//   display: flex;\n// `\nconst ResultsList = styled.div<{ visible: boolean }>`\n  display: ${({ visible }) => visible ? 'block' : 'none'};\n  height: 170px;\n  overflow: scroll;\n  position: absolute;\n  visibility: ${({ visible }) => visible ? 'visible' : 'hidden'};\n  width: 100%;\n  z-index: 10;\n`\nconst ResultItem = styled.div`\n  background: #fff;\n  border-bottom: 1px solid #e2e2e2;\n  border-left: 1px solid #e2e2e2;\n  border-right: 1px solid #e2e2e2;\n  box-shadow: 1px 1px #b5b5b570;\n  cursor: pointer;\n  display: flex;\n  padding: 5px 15px;\n  &:hover {\n    background: #f2f2f2;\n  }\n`\nconst ShowMore = styled.div``\nconst SearchInput = styled(SearchInputEl)`\n  position: relative;\n`\n\n// SearchInput.propTypes = {\n//   id: PropTypes.string,\n//   placeholder: PropTypes.string,\n//   hasError: PropTypes.bool,\n//   disabled: PropTypes.bool,\n//   required: PropTypes.bool,\n//   color: PropTypes.oneOf(['white', 'green']),\n//   dataAttrBase: PropTypes.string,\n//   searchItems: PropTypes.arrayOf(PropTypes.object),\n//   searchOptions: PropTypes.object,\n//   selected: PropTypes.bool,\n//   rounded: PropTypes.bool.isRequired,\n//   searchIcon: PropTypes.bool.isRequired,\n//   resultIsLink: PropTypes.bool,\n//   renderSearchResult: PropTypes.func.isRequired,\n//   shownSearchResults: PropTypes.number.isRequired,\n//   onSubmit: PropTypes.func.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nSearchInput.defaultProps = {\n  color: 'white',\n  placeholder: 'Etsi',\n  resultIsLink: false,\n  selected: false,\n  rounded: true,\n  searchIcon: true,\n  shownSearchResults: 10,\n};\n\nexport default SearchInput\n","import React, { memo, useEffect, useState } from 'react'\nimport styled from '../theme/styled'\nimport { inject } from 'mobx-react'\n\n// import PropTypes from 'prop-types'\nimport Fuse from 'fuse.js'\n\nimport SearchInput from './SearchInput'\n\nimport { ITopic, ISearchTopic } from '../types/topic'\nimport { TopicStore } from '../stores/TopicStore'\n\nfunction createSearchItemsList(topics: ITopic[]) {\n  return topics.reduce((acc: ISearchTopic[], cur: ITopic) => {\n    acc.push({\n      key: cur.topic_id,\n      text: cur.path,\n      breadcrumb: cur.path.split('/'),\n      value: cur.topic_id\n    })\n    if (cur.topics.length > 0) {\n      acc.push(...createSearchItemsList(cur.topics))\n    }\n    return acc\n  }, [] as ISearchTopic[])\n}\n\nfunction findTopicsByBreadcrumb(topics: ISearchTopic[], crumb: string[]) {\n  const t = topics.reduce((acc: ISearchTopic[], cur: ISearchTopic) => {\n    if (isEqualBreadcrumb(cur.breadcrumb, crumb, cur.breadcrumb.length - 1)) {\n      acc.push({\n        key: cur.key,\n        text: cur.text,\n        breadcrumb: cur.breadcrumb,\n        value: cur.value\n      })\n    }\n    return acc\n  }, [] as ISearchTopic[])\n  return sortSearchResultsByCrumb(t)\n}\n\nfunction isEqualBreadcrumb(crumb1: string[], crumb2: string[], fromStart: number) {\n  const to = fromStart\n  if (fromStart === undefined && crumb1.length !== crumb2.length) {\n    return false\n  }\n  let equal = true\n  for(let i = 0; i < to; i++) {\n    if (crumb1[i] !== crumb2[i]) equal = false\n  }\n  return equal\n}\n\nfunction sortSearchResultsByCrumb(topics: ISearchTopic[]) {\n  return topics.sort((a, b) => {\n    if (a.breadcrumb.length === b.breadcrumb.length) {\n      // fuzzy search the text? or not, it's good enough\n      return 0\n    }\n    return b.breadcrumb.length - a.breadcrumb.length\n  })\n}\n\ninterface IProps {\n  className?: string\n  id?: string\n  value: string\n  placeholder?: string\n  disabled?: boolean\n  required?: boolean\n  hasError?: boolean\n  color?: string\n  selected?: boolean\n  rounded?: boolean\n  topicStore?: TopicStore\n  onChange: (val: string) => void\n  onSubmit: (item: ISearchTopic) => string\n}\n\nconst TopicSearchInput = inject('topicStore')(memo((props: IProps) => {\n  const {\n    className, id, value, placeholder, disabled, required, selected,\n    hasError, onChange, onSubmit, topicStore\n  } = props\n\n  const [searchItems, setSearchItems] = useState([] as ISearchTopic[])\n  // https://fusejs.io/\n  // fuse.js is a fuzzy-search library which is helpful when user makes typos etc\n  const [fuse, setFuse] = useState(new Fuse(searchItems, {\n    threshold: 0.2, keys: ['text'], tokenize: true, maxPatternLength: 100\n  }))\n\n  useEffect(() => {\n    const newItems = createSearchItemsList(topicStore!.topics)\n    setSearchItems(newItems)\n    setFuse(new Fuse(newItems, {\n      threshold: 0.2, keys: ['text'], tokenize: true, maxPatternLength: 100\n    }))\n  }, [topicStore!.topics])\n\n  const handleSearchItemClick = (result: ISearchTopic) => (e: any) => {\n    onChange(result.text)\n  }\n  function handleSearch(newVal: string, prevVal: string) {\n    const crumbs = newVal.split('/').slice(0, -1)\n    if (crumbs.length === 0) {\n      return fuse.search(newVal) as ISearchTopic[]\n    }\n    return findTopicsByBreadcrumb(searchItems, crumbs)\n  }\n  function renderSearchResult(result: ISearchTopic) {\n    return <SearchResult onClick={handleSearchItemClick(result)}>{result.text}</SearchResult>\n  }\n  return (\n    <SearchInput\n      className={className}\n      id={id}\n      value={value}\n      placeholder={placeholder}\n      disabled={disabled}\n      required={required}\n      hasError={hasError}\n      onChange={onChange}\n      onSearch={handleSearch}\n      onSubmit={onSubmit}\n      resultIsLink={false}\n      rounded={false}\n      searchIcon={false}\n      selected={selected}\n      searchItems={searchItems}\n      renderSearchResult={renderSearchResult}\n      shownSearchResults={200}\n    />\n  )\n}))\n\nconst SearchResult = styled.button`\n  background: transparent;\n  border: 0;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: start;\n  width: 100%;\n`\n\n// TopicSearchInput.propTypes = {\n//   id: PropTypes.string,\n//   placeholder: PropTypes.string,\n//   hasError: PropTypes.bool,\n//   disabled: PropTypes.bool,\n//   required: PropTypes.bool,\n//   allTopics: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   onChange: PropTypes.func.isRequired,\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// TopicSearchInput.defaultProps = {\n//   placeholder: \"Valitse aihealue\",\n//   required: false,\n//   disabled: false,\n// }\n\nexport default TopicSearchInput\n","import React, { memo, useRef, useEffect, useState, ReactNode } from 'react'\nimport styled from 'styled-components'\n// import PropTypes from 'prop-types'\nimport { FiSearch } from 'react-icons/fi'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport debounce from 'lodash/debounce'\n\nimport Fuse from 'fuse.js'\n\nimport {Input} from '../elements/Input'\n\nimport useClickOutside from '../hooks/useClickOutside'\nimport { ITheme } from '../types/theme'\nimport { ISearchTopic } from '../types/topic'\n\ninterface IProps {\n  className?: string\n  id?: string\n  value: string\n  placeholder?: string\n  disabled?: boolean\n  required?: boolean\n  hasError?: boolean\n  color?: string\n  dataAttrBase?: string\n  searchItems: any[]\n  searchOptions: any\n  selected?: boolean\n  rounded?: boolean\n  searchIcon?: ReactNode\n  resultIsLink?: boolean\n  renderSearchResult: (result: ISearchTopic) => ReactNode\n  shownSearchResults: number\n  onChange: (val: string) => void\n  onSubmit: (form: any) => void\n}\n\nconst SearchInputEl = memo((props: IProps) => {\n  const {\n    className, id, value, placeholder, disabled, required, hasError,\n    color, dataAttrBase, searchItems, searchOptions, selected, rounded, searchIcon,\n    resultIsLink, renderSearchResult, shownSearchResults, onChange, onSubmit\n  } = props\n  const [searchResults, setSearchResults] = useState([] as ISearchTopic[])\n  const [shownResults, setShownResults] = useState(shownSearchResults)\n  const [hasMoreResults, setHasMoreResults] = useState(false)\n  const ref = useRef(null)\n  const [resultsVisible, setResultsVisible] = useState(false)\n  useClickOutside(ref, () => hideResults(), resultsVisible)\n  // https://fusejs.io/\n  // fuse.js is a fuzzy-search library which is helpful when user makes typos etc\n  const [fuse, setFuse] = useState(new Fuse(searchItems, searchOptions))\n  const debouncedSearch = debounce(handleSearch, 250)\n\n  useEffect(() => {\n    setFuse(new Fuse(searchItems, searchOptions))\n  }, [searchItems])\n\n  function hideResults() {\n    setResultsVisible(false)\n  }\n  function handleKeyPress(event: React.KeyboardEvent) {\n    if (event.key === 'Enter') {\n      onSubmit(searchResults[0])\n      hideResults()\n    }\n  }\n  function handleChange(newVal: string) {\n    onChange(newVal)\n    debouncedSearch(newVal)\n  }\n  function handleSearch(newVal: string) {\n    const deletedText = newVal.length < value.length\n    // Reset the shownResults amount to the default\n    // Dunno if this is the perfect flow but it seems all right\n    if (deletedText) {\n      setShownResults(shownSearchResults)\n    }\n    // If searchItems were provided and there exists results\n    if (searchItems && searchItems.length > 0) {\n      console.time('search')\n      const newResults = fuse.search(newVal) as ISearchTopic[]\n      console.log(newResults)\n      console.timeEnd('search')\n      setSearchResults(newResults)\n      // If there is new results less than shownResults, show the \"Näytä lisää\" at the end of the list\n      if (shownResults < newResults.length) {\n        setHasMoreResults(true)\n      } else {\n        setHasMoreResults(false)\n      }\n    }\n  }\n  function handleShowMoreResults() {\n    const newShownResults = shownResults + shownSearchResults\n    setShownResults(newShownResults)\n    if (newShownResults >= searchResults.length) {\n      setHasMoreResults(false)\n    }\n  }\n  function handleResultItemClick(item: any) {\n    // Prevents onClick from transitioning if result was link that was opened to eg new tab\n    if (!resultIsLink) {\n      onSubmit(item)\n      hideResults()\n    }\n  }\n  function handleSearchIconClick() {\n    onSubmit(searchResults[0])\n    hideResults()\n  }\n  console.log(resultsVisible)\n  return (\n    <div className={className} ref={ref}>\n      <SearchWrapper\n        color={color}\n        hasError={hasError}\n        rounded={rounded}\n      >\n        <StyledInput\n          id={id}\n          type=\"text\"\n          value={value}\n          placeholder={placeholder}\n          disabled={disabled}\n          required={required}\n          hasError={hasError}\n          fullWidth\n          autocomplete=\"off\"\n          color={color}\n          selected={selected}\n          rounded={rounded}\n          onChange={handleChange}\n          onKeyPress={handleKeyPress}\n          onFocus={() => setResultsVisible(true)}\n        />\n        { searchIcon && <SearchButton\n          color={color}\n          rounded={rounded}\n          data-gtm-label={dataAttrBase ? `btn-search-${dataAttrBase}` : null}\n          onClick={handleSearchIconClick}\n        >\n          <IconWrapper color={color}>\n            <SearchIcon size={18} />\n          </IconWrapper>\n        </SearchButton>\n        }\n      </SearchWrapper>\n      <ResultsList visible={resultsVisible}>\n        <InfiniteScroll\n          className=\"infinite-scroll\"\n          dataLength={shownResults}\n          next={handleShowMoreResults}\n          hasMore={hasMoreResults}\n          loader={<h4>Lataa aiheita..</h4>}\n          height={300}\n          endMessage={ searchResults.length !== 0 &&\n            <ResultItem className=\"end-of-results\">\n            </ResultItem>}\n        >\n          { searchResults.slice(0, shownResults).map((r, i) =>\n          <ResultItem key={r.key} onClick={() => handleResultItemClick(r)}>\n            {renderSearchResult(r)}\n          </ResultItem>\n          )}\n        </InfiniteScroll>\n      </ResultsList>\n    </div>\n  )\n})\n\nfunction borderColor(props: { color?: string, hasError?: boolean, theme: ITheme}) {\n  const { color, hasError, theme } = props\n  if (hasError) return theme.color.red\n  if (color === 'green') return theme.color.green\n  return theme.color.grayLight\n}\nconst SearchWrapper = styled.div<{ color?: string, rounded?: boolean, hasError?: boolean }>`\n  display: flex;\n  align-items: center;\n  background: ${({ color, theme }) => color === 'white' ? '#fff' : theme.color.green};\n  border: 1px solid ${(props) => borderColor(props)};\n  border-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  justify-content: space-between;\n  &:hover, &:active, &:focus {\n    border-color: #40a9ff;\n  }\n`\nconst StyledInput = styled(Input)<{ rounded?: boolean, selected?: boolean }>`\n  border: 0;\n  // Eliminate awkward empty space before the input text\n  margin-left: ${({ rounded }) => rounded && '11px'};\n  & > input {\n    border: 0;\n    outline: 0;\n    // Same empty space thing. Total 14px matches Input's left padding\n    padding-left: ${({ rounded }) => rounded && '3px'};\n    text-decoration: ${({ selected }) => selected && 'underline'};\n  }\n`\nconst SearchButton = styled.button<{ rounded?: boolean }>`\n  background: transparent;\n  border: none;\n  border-top-right-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  border-bottom-right-radius: ${({ rounded }) => rounded ? '26px' : '4px'};\n  cursor: pointer;\n  padding: 7px 16px;\n  outline: none;\n  &:hover {\n    background-color: ${({ color, theme }) => color === 'white' ? theme.grayLightest : theme.color.green};\n    border-left: 1px solid ${({ theme }) => theme.color.grayLight};\n  }\n`\nconst IconWrapper = styled.div`\n  display: flex; // Center the search icon\n  height: 18px;\n  color: ${({ color, theme }) => color === 'white' ? theme.color.textLight : '#fff'};\n`\nconst SearchIcon = styled(FiSearch)`\n  vertical-align: middle;\n`\nconst SvgWrapper = styled.span`\n  align-items: center;\n  display: flex;\n`\nconst ResultsList = styled.div<{ visible: boolean }>`\n  display: ${({ visible }) => visible ? 'block' : 'none'};\n  height: 300px;\n  position: absolute;\n  visibility: ${({ visible }) => visible ? 'visible' : 'hidden'};\n  width: 100%;\n  z-index: 10;\n  .infinite-scroll {\n    margin: 0 15px 0 15px;\n    &::-webkit-scrollbar {\n      background: ${({ theme }) => theme.color.grayLight};\n      height: 8px;\n      width: 5px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: ${({ theme }) => theme.color.gray};\n    }\n  }\n`\nconst ResultItem = styled.div`\n  background: #fff;\n  border-bottom: 1px solid #e2e2e2;\n  border-left: 1px solid #e2e2e2;\n  border-right: 1px solid #e2e2e2;\n  box-shadow: 1px 1px #b5b5b570;\n  cursor: pointer;\n  display: flex;\n  padding: 5px 15px;\n  &:hover {\n    background: #f2f2f2;\n  }\n  &.end-of-results {\n    height: 5px;\n    &:hover {\n      background: #fff;\n    }\n    & > ${SvgWrapper} {\n      margin-right: 15px;\n    }\n  }\n`\nconst SearchInput = styled(SearchInputEl)`\n  position: relative;\n`\n\n// SearchInput.propTypes = {\n//   id: PropTypes.string,\n//   placeholder: PropTypes.string,\n//   hasError: PropTypes.bool,\n//   disabled: PropTypes.bool,\n//   required: PropTypes.bool,\n//   color: PropTypes.oneOf(['white', 'green']),\n//   dataAttrBase: PropTypes.string,\n//   searchItems: PropTypes.arrayOf(PropTypes.object),\n//   searchOptions: PropTypes.object,\n//   selected: PropTypes.bool,\n//   rounded: PropTypes.bool.isRequired,\n//   searchIcon: PropTypes.bool.isRequired,\n//   resultIsLink: PropTypes.bool,\n//   renderSearchResult: PropTypes.func.isRequired,\n//   shownSearchResults: PropTypes.number.isRequired,\n//   onSubmit: PropTypes.func.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nSearchInput.defaultProps = {\n  color: 'white',\n  placeholder: 'Etsi',\n  resultIsLink: false,\n  selected: false,\n  rounded: true,\n  searchIcon: true,\n  shownSearchResults: 10,\n};\n\nexport default SearchInput\n","import React, { memo, useEffect, useState } from 'react'\nimport styled from '../theme/styled'\nimport { inject } from 'mobx-react'\n\n// import PropTypes from 'prop-types'\n\nimport OldSearchInput from './OldSearchInput'\n\nimport { ITopic, ISearchTopic } from '../types/topic'\nimport { TopicStore } from '../stores/TopicStore'\n\nfunction createSearchItemsList(topics: ITopic[]) {\n  return topics.reduce((acc: ISearchTopic[], cur: ITopic) => {\n    acc.push({\n      key: cur.topic_id,\n      text: cur.path,\n      breadcrumb: cur.path.split('/'),\n      value: cur.topic_id\n    })\n    if (cur.topics.length > 0) {\n      acc.push(...createSearchItemsList(cur.topics))\n    }\n    return acc\n  }, [] as ISearchTopic[])\n}\n\ninterface IProps {\n  className?: string\n  id?: string\n  value: string\n  placeholder?: string\n  disabled?: boolean\n  required?: boolean\n  hasError?: boolean\n  color?: string\n  selected?: boolean\n  rounded?: boolean\n  topicStore?: TopicStore\n  onChange: (val: string) => void\n  onSubmit: (form: any) => void\n}\n\nconst TopicSearchInput = inject('topicStore')(memo((props: IProps) => {\n  const {\n    className, id, value, placeholder, disabled, required, selected,\n    hasError, onChange, onSubmit, topicStore\n  } = props\n  const [searchItems, setSearchItems] = useState([] as ISearchTopic[])\n\n  useEffect(() => {\n    const newItems = createSearchItemsList(topicStore!.topics)\n    setSearchItems(newItems)\n  }, [topicStore!.topics])\n\n  const handleSearchItemClick = (result: ISearchTopic) => (e: any) => {\n    onChange(result.text)\n  }\n  function renderSearchResult(result: ISearchTopic) {\n    return <SearchResult onClick={handleSearchItemClick(result)}>{result.text}</SearchResult>\n  }\n  return (\n    <OldSearchInput\n      className={className}\n      id={id}\n      value={value}\n      placeholder={placeholder}\n      disabled={disabled}\n      required={required}\n      hasError={hasError}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      resultIsLink={false}\n      rounded={false}\n      searchIcon={false}\n      selected={selected}\n      searchItems={searchItems}\n      searchOptions={{threshold: 0.2, keys: ['text', 'breadcrumb'], tokenize: true, maxPatternLength: 100 }}\n      renderSearchResult={renderSearchResult}\n      shownSearchResults={20}\n    />\n  )\n}))\n\nconst SearchResult = styled.button`\n  background: transparent;\n  border: 0;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: start;\n  width: 100%;\n`\n\n// TopicSearchInput.propTypes = {\n//   id: PropTypes.string,\n//   placeholder: PropTypes.string,\n//   hasError: PropTypes.bool,\n//   disabled: PropTypes.bool,\n//   required: PropTypes.bool,\n//   allTopics: PropTypes.arrayOf(PropTypes.object).isRequired,\n//   onChange: PropTypes.func.isRequired,\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// TopicSearchInput.defaultProps = {\n//   placeholder: \"Valitse aihealue\",\n//   required: false,\n//   disabled: false,\n// }\n\nexport default TopicSearchInput\n","import React, { memo, useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport styled from '../theme/styled'\n\nimport TopicSearchInput from '../components/TopicSearchInput'\nimport OldTopicSearchInput from '../components/OldTopicSearchInput'\n\nimport { Stores } from '../stores'\nimport { TopicStore } from '../stores/TopicStore'\n\nimport { ISearchTopic } from '../types/topic'\n\ninterface IProps {\n  topicStore?: TopicStore,\n}\n\n@inject((stores: Stores) => ({\n  topicStore: stores.topicStore,\n}))\n@observer\nexport class FrontPage extends React.PureComponent<IProps> {\n  componentDidMount() {\n    this.props.topicStore!.getTopics()\n  }\n  render() {\n    return (\n      <Container>\n        <a href=\"https://github.com/TeemuKoivisto/search-demo-app\"><h1>Search demo app</h1></a>\n        <SearchForm />\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n`\n\nconst SearchForm = memo((props: {}) => {\n  const [topic, setTopic] = useState('')\n  const [topicId, setTopicId] = useState(-1)\n\n  function getTopicError() {\n    if (topic.length === 0 || topicId === -1) {\n      return 'Valitse aihealue.'\n    }\n    return ''\n  }\n  function handleTopicChange(val: string) {\n    setTopic(val)\n    setTopicId(-1)\n  }\n  function handleTopicSelect(val: ISearchTopic) {\n    setTopic(val.text)\n    setTopicId(val.value)\n    return val.text\n  }\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault()\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>New, working version</h2>\n      <TopicSearchInput\n        id=\"thread-topic\"\n        placeholder=\"Kirjoita aihealue\"\n        required\n        hasError={getTopicError().length !== 0}\n        value={topic}\n        selected={topicId !== -1}\n        onChange={handleTopicChange}\n        onSubmit={handleTopicSelect}\n      />\n      <h2>Old, crappy one</h2>\n      <OldTopicSearchInput\n        id=\"thread-topic\"\n        placeholder=\"Kirjoita aihealue\"\n        required\n        hasError={getTopicError().length !== 0}\n        value={topic}\n        selected={topicId !== -1}\n        onChange={handleTopicChange}\n        onSubmit={handleTopicSelect}\n      />\n    </form>\n  )\n})\n","import * as React from 'react'\nimport { BrowserRouter, Redirect, Switch } from 'react-router-dom'\n\nimport { WrappedRoute } from './components/WrappedRoute'\n\nimport { FrontPage } from './pages/FrontPage'\n\nexport const Routes = () : React.ReactElement<any> => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <WrappedRoute exact path=\"/\" component={FrontPage}/>\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>\n)\n","import * as React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'mobx-react'\nimport { ThemeProvider } from 'styled-components'\n\nimport { Stores } from './stores'\nimport { confMobx } from './stores/mobxConf'\n\nimport { defaultTheme } from './theme/defaultTheme'\nimport { GlobalStyle } from './theme/GlobalStyle'\n\nimport { Routes } from './routes'\n\nconfMobx()\n\nexport const stores = new Stores()\n\nrender(\n  <Provider {...stores}>\n    <ThemeProvider theme={defaultTheme}>\n      <>\n        <Routes />\n        <GlobalStyle />\n      </>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n)\n","import { TopicStore } from './TopicStore'\nimport { ToastStore } from './ToastStore'\n\nexport class Stores {\n  topicStore: TopicStore\n  toastStore: ToastStore\n\n  constructor() {\n    this.topicStore = new TopicStore()\n    this.toastStore = new ToastStore()\n  }\n}\n","import { ITheme } from '../types/theme'\n\nexport const defaultTheme : ITheme = {\n  color: {\n    bg: '#fff',\n    gray: '#aaa',\n    grayLight: '#eee',\n    grayLightest: '#F5F7FC',\n    primary: '#1d9eff',\n    green: '#5B9C2D',\n    blue: '#425EC2',\n    red: '#ff5d5d',\n    orange: '#EF7F00',\n    secondary: '#ebf6ff',\n    textLight: '#666',\n    textDark: '#222',\n    white: '#fff',\n    yellow: 'yellow',\n  },\n  fontSize: {\n    small: '14px',\n    medium: '16px',\n    large: '24px',\n    xlarge: '40px',\n    largeIcon: '50px'\n  },\n  font: {\n    text: '\\'Raleway\\', sans-serif',\n  },\n  transitions: {\n    bezier: 'cubic-bezier(0.55, 0.085, 0.68, 0.53)',\n  }\n}\n"],"sourceRoot":""}